server:
  port: 0
# Debug option: prevent timeout
#  session:
#    timeout: 60000

management:
  port: 8081
  # security:
  #   enabled: false

kafka:
  broker:
    host: http://kafka
    port: 9092
    address: ${kafka.broker.host}:${kafka.broker.port}
  zookeeper:
    host: http://zookeeper
    port: 2181
    address: ${kafka.zookeeper.host}:${kafka.zookeeper.port}

smartcosmos:
  datasource:
    default-host: mysql
    default-username: cosmos
    default-password: dev
    default-db: devkit
  authorization-server: http://auth-server:8080
  event-header: "urn:smartcosmos://events:"

info:
  description: SMART COSMOS Cluster Services
  url: https://www.smart-cosmos.com/
eureka:
  client:
    serviceUrl:
      defaultZone: http://service-discovery:8080/eureka/
    healthcheck:
      enabled: true

hystrix:
  command.default.execution.isolation.strategy: THREAD



security:
  oauth2:
    client:
      accessTokenUri: ${smartcosmos.authorization-server}/oauth/token
      user-authorization-uri: ${smartcosmos.authorization-server}/oauth/authorize
      client-id: '{cipher}ef4e264a69ea97cf574bc96b7bcf364af4a9ab61fb2ad17097e88311d2878eb42e265b0a05e46c3f1ed9172ee1e335fd'
      client-secret: '{cipher}af7a1662ba0d19daf3f5e3ab2da8947f243ba3bc14d889d21627223bbed726f8e7ac793a8952c00367343918134daef8'
    resource:
      jwt:
        key-value: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhLD+JUbjIKXzIJECP19V
          EKW5MQCFM7sIRiHeEgSh9pSpcn0W2fyDgUfZuSgWp6GCjmRaTrFwVt9zhUrOC/Nq
          VyaYvV5nwqaNv02CkAMpRBWpFKcdMdx2mMjDGvklY2BIvG8X/9BWUhWyvX5Ye0Vb
          MLIfcg2sLcqJQ/tpB9GAZJGitjP051KEJuOodrZTUQwrcz7cIUQGsT3jau5WjyIm
          wc7WG5jExUkXMcdRIo9eQAMNfl/PpW1eb648Tymmj4C4pT5DTYIjF0p6V+TSCfaP
          H7qQPYIAx4HfKd74sY/0Jom42Vml4YnNZuDQWm9Z+K79MI3GQXbXB/Rng+fAwilf
          PQIDAQAB
          -----END PUBLIC KEY-----

spring:
  jackson:
    deserialization:
      ACCEPT_SINGLE_VALUE_AS_ARRAY: true

ribbon:
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 2
  http:
    client:
      enabled: true
  ReadTimeout: 30000

logging:
  level:
    ROOT: INFO
    com.netflix:
      eureka.registry: WARN
      discovery.shared.resolver.aws.ConfigClusterResolver: WARN
    org.apache.kafka.clients:
      producer: WARN
      consumer: WARN
